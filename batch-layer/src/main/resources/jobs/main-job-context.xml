<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Needed if we use a AutomaticJobRegistrar -->
    <context:annotation-config/>

    <import resource="parent-job-context.xml"/>

    <batch:job id="mainJob" parent="parentJob">
        <batch:step id="retrieveDataFromRailtime" next="searchDelays">
            <batch:partition partitioner="partitioner">
                <batch:handler task-executor="taskExecutor"/>
                <batch:step>
                    <batch:tasklet transaction-manager="batchTransactionManager">
                        <batch:chunk reader="compositeRailtimeItemReader"
                                     processor="chainedProcessorsForRailtime"
                                     writer="raildelaysServiceWriter"
                                     commit-interval="1" skip-limit="10" retry-limit="3">
                            <batch:retryable-exception-classes>
                                <batch:include class="java.io.IOException" />
                            </batch:retryable-exception-classes>
                            <batch:skippable-exception-classes>
                                <batch:include
                                        class="org.springframework.batch.item.validator.ValidationException" />
                            </batch:skippable-exception-classes>
                        </batch:chunk>
                        <batch:transaction-attributes
                                isolation="DEFAULT" propagation="REQUIRED" />
                    </batch:tasklet>
                </batch:step>
            </batch:partition>
        </batch:step>
        <batch:step id="searchDelays" next="searchDelaysXls">
            <batch:tasklet transaction-manager="batchTransactionManager" allow-start-if-complete="true">
                <batch:chunk reader="delaysItemReader"
                             processor="chainedProcessorsForDelays"
                             writer="flatFileItemWriter"
                             commit-interval="4" skip-limit="10">
                    <batch:skippable-exception-classes>
                        <batch:include
                                class="org.springframework.batch.item.validator.ValidationException"/>
                        <batch:include
                                class="be.raildelays.batch.exception.ArrivalDepartureEqualsException"/>
                    </batch:skippable-exception-classes>
                </batch:chunk>
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRED"/>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="skippedItemsListener"/>
            </batch:listeners>
        </batch:step>
        <batch:step id="searchDelaysXls">
            <batch:tasklet transaction-manager="batchTransactionManager" allow-start-if-complete="true">
                <batch:chunk reader="delaysItemReader"
                             processor="chainedProcessorsForDelays"
                             writer="excelSheetItemWriter"
                             commit-interval="4" skip-limit="10">
                    <batch:skippable-exception-classes>
                        <batch:include
                                class="org.springframework.batch.item.validator.ValidationException"/>
                        <batch:include
                                class="be.raildelays.batch.exception.ArrivalDepartureEqualsException"/>
                    </batch:skippable-exception-classes>
                </batch:chunk>
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRED"/>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="skippedItemsListener"/>
            </batch:listeners>
        </batch:step>
    </batch:job>

    <bean id="partitioner" class="be.raildelays.batch.reader.TrainIdPartitioner">
        <constructor-arg ref="trainListReader" />
    </bean>	

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"/>
        <property name="maxPoolSize" value="4"/>
        <property name="allowCoreThreadTimeOut" value="true"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================        READERS         ===================================== -->
    <!-- ================================================================================================== -->
	<bean id="trainListReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
            <bean
                class="org.springframework.batch.item.file.mapping.PassThroughLineMapper">
            </bean>
        </property>
        <property name="encoding" value="ISO-8859-1" />
        <property name="resource" value="${file.trainlist.uri}" />
    </bean>
	
    <bean id="compositeRailtimeItemReader" class="be.raildelays.batch.reader.CompositeRailtimeItemReader"
          scope="step">
        <property name="departureReader">
            <bean class="be.raildelays.batch.reader.RailtimeItemReader"
                  scope="step">
                <property name="date" value="#{jobParameters['date']}" />
                <property name="trainId" value="#{stepExecutionContext['trainId']}" />
                <property name="sens">
                    <util:constant static-field="be.raildelays.domain.Sens.DEPARTURE" />
                </property>
            </bean>
        </property>
        <property name="arrivalReader">
            <bean class="be.raildelays.batch.reader.RailtimeItemReader"
                  scope="step">
                <property name="date" value="#{jobParameters['date']}" />
                <property name="trainId" value="#{stepExecutionContext['trainId']}" />
                <property name="sens">
                    <util:constant static-field="be.raildelays.domain.Sens.ARRIVAL" />
                </property>
            </bean>
        </property>
    </bean>

    <bean id="delaysItemReader" class="be.raildelays.batch.reader.DelaysItemReader"
          scope="step">
        <property name="stationA" value="#{jobParameters['station.a.name']}"/>
        <property name="stationB" value="#{jobParameters['station.b.name']}"/>
        <property name="date" value="#{jobParameters['date']}" />
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================       PROCESSORS       ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="chainedProcessorsForRailtime"
          class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="routeLogMapperProcessor" />
                <ref bean="validatorProcessor" />
            </list>
        </property>
    </bean>

    <bean id="chainedProcessorsForDelays" class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="aggregateExpectedTimeProcessor"/>
                <ref bean="excelRowMapperProcessor"/>
                <ref bean="validatorProcessor"/>
                <ref bean="searchNextTrainProcessor"/>
                <ref bean="filterTwoSensPerDayProcessor"/>
                <ref bean="filterSmallDelaysProcessor"/>
                <ref bean="validatorProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="routeLogMapperProcessor" class="be.raildelays.batch.processor.RouteLogMapperProcessor"
          scope="step">
        <property name="date" value="#{jobParameters[date]}" />
    </bean>

    <bean id="aggregateExpectedTimeProcessor" class="be.raildelays.batch.processor.AggregateExpectedTimeProcessor"
          scope="step">
    </bean>

    <bean id="excelRowMapperProcessor" class="be.raildelays.batch.processor.ExcelRowMapperProcessor" scope="step">
        <property name="stationA" value="#{jobParameters['station.a.name']}"/>
        <property name="stationB" value="#{jobParameters['station.b.name']}"/>
    </bean>

    <bean id="searchNextTrainProcessor" class="be.raildelays.batch.processor.SearchNextTrainProcessor"
          scope="step">
    </bean>

    <bean id="validatorProcessor" class="org.springframework.batch.item.validator.ValidatingItemProcessor">
        <property name="validator">
            <bean class="org.springframework.batch.item.validator.SpringValidator">
                <property name="validator">
                    <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="filterTwoSensPerDayProcessor" class="be.raildelays.batch.processor.FilterTwoSensPerDayProcessor"
          scope="step">
        <property name="stationA" value="#{jobParameters['station.a.name']}"/>
        <property name="stationB" value="#{jobParameters['station.b.name']}"/>
    </bean>

    <bean id="filterSmallDelaysProcessor" class="be.raildelays.batch.processor.FilterSmallDelaysProcessor"
          scope="step">
        <property name="threshold" value="15"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         WRITERS        ===================================== -->
    <!-- ================================================================================================== -->
    <bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file.path']}"/>
        <property name="appendAllowed" value="true"/>
        <property name="shouldDeleteIfExists" value="false"/>
        <property name="saveState" value="true"/>
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.RecursiveCollectionLineAggregator">
                <property name="delegate">
                    <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="excelSheetItemWriter" class="be.raildelays.batch.writer.ExcelSheetItemWriter"
          scope="step">
        <property name="templatePath" value="#{jobParameters['excel.input.template']}"/>
        <property name="outputDirectory" value="#{jobParameters['excel.output.file']}"/>
    </bean>
    <bean id="raildelaysServiceWriter" class="be.raildelays.batch.writer.RaildelaysServiceWriter"
          scope="step">
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================        LISTENERS       ===================================== -->
    <!-- ================================================================================================== -->
    <bean id="skippedItemsListener" class="be.raildelays.batch.listener.LogSkippedItemListener"/>

</beans>
