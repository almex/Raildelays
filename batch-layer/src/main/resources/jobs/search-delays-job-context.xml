<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Needed if we use a AutomaticJobRegistrar -->
    <context:annotation-config/>

    <import resource="parent-job-context.xml"/>

    <batch:job id="searchDelaysJob" parent="parentJob">
        <batch:step id="searchDelays">
            <batch:tasklet transaction-manager="batchTransactionManager" allow-start-if-complete="true">
                <batch:chunk cache-capacity="" reader="compositeRaildelaysItemReader"
                             processor="chainedProcessorsForDelays" writer="flatFileItemWriter"
                             commit-interval="1" skip-limit="100">
                    <batch:skippable-exception-classes>
                        <batch:include
                                class="org.springframework.batch.item.validator.ValidationException"/>
                        <batch:include
                                class="be.raildelays.batch.exception.ArrivalDepartureEqualsException"/>
                    </batch:skippable-exception-classes>
                </batch:chunk>
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRED"/>
                <batch:listeners>
                    <batch:listener ref="skippedItemsListener"/>
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- Readers -->
    <bean id="compositeRaildelaysItemReader"
          class="be.raildelays.batch.reader.CompositeRaildelaysItemReader"
          scope="step">
        <property name="datesItemReader">
            <bean class="be.raildelays.batch.reader.DatabaseDatesItemReader"
                  scope="step">
                <property name="lastDate" value="#{jobParameters['date']}"/>
            </bean>
        </property>
        <property name="delaysItemReader">
            <bean class="be.raildelays.batch.reader.DelaysItemReader"
                  scope="step">
                <property name="stationA" value="#{jobParameters['station.a.name']}"/>
                <property name="stationB" value="#{jobParameters['station.b.name']}"/>
            </bean>
        </property>
    </bean>

    <!-- Processors -->
    <bean id="chainedProcessorsForDelays" class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="aggregateExpectedTimeProcessor"/>
                <ref bean="excelRowMapperProcessor"/>
                <ref bean="validatorProcessor"/>
                <ref bean="searchNextTrainProcessor"/>
                <ref bean="filterTwoSensPerDayProcessor"/>
                <ref bean="validatorProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="excelRowMapperProcessor" class="be.raildelays.batch.processor.ExcelRowMapperProcessor" scope="step">
        <property name="stationA" value="#{jobParameters['station.a.name']}"/>
        <property name="stationB" value="#{jobParameters['station.b.name']}"/>
    </bean>

    <bean id="aggregateExpectedTimeProcessor" class="be.raildelays.batch.processor.AggregateExpectedTimeProcessor"
          scope="step">
    </bean>

    <bean id="searchNextTrainProcessor" class="be.raildelays.batch.processor.SearchNextTrainProcessor"
          scope="step">
    </bean>

    <bean id="validatorProcessor" class="org.springframework.batch.item.validator.ValidatingItemProcessor">
        <property name="validator">
            <bean class="org.springframework.batch.item.validator.SpringValidator">
                <property name="validator">
                    <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="filterTwoSensPerDayProcessor" class="be.raildelays.batch.processor.FilterTwoSensPerDayProcessor"
          scope="step">
        <property name="stationA" value="#{jobParameters['station.a.name']}"/>
        <property name="stationB" value="#{jobParameters['station.b.name']}"/>
    </bean>

    <!-- Writers -->
    <bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file.path']}"/>
        <property name="appendAllowed" value="false"/>
        <property name="shouldDeleteIfExists" value="true"/>
        <property name="saveState" value="true"/>
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.RecursiveCollectionLineAggregator">
                <property name="delegate">
                    <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="skippedItemsListener" class="be.raildelays.batch.listener.LogSkippedItemListener"/>

</beans>
