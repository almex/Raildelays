<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Needed if we use a AutomaticJobRegistrar -->
    <context:annotation-config/>
    <!-- To make the embedded step to use scope="step" -->
    <bean class="org.springframework.batch.core.scope.StepScope"/>

    <import resource="classpath:/jobs/parent-job-context.xml"/>


    <job id="handleMoreThanOneHourDelaysJob" parent="parentJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="moveFileStep" parent="parentStep" next="sendByEmailDelayMoreThanOneHour">
            <tasklet transaction-manager="batchTransactionManager" ref="moveFileTasklet"/>
        </step>
        <step id="sendByEmailDelayMoreThanOneHour" parent="parentStep" next="removeDelayMoreThanOneHour">
            <tasklet transaction-manager="batchTransactionManager">
                <chunk reader="oneHourDelayItemReader"
                       processor="chainedProcessorsForMoreThanOneHourDelay"
                       writer="emailWriter"
                       commit-interval="1">
                </chunk>
            </tasklet>
        </step>
        <step id="removeDelayMoreThanOneHour" parent="parentStep" next="deleteFile">
            <tasklet transaction-manager="batchTransactionManager">
                <chunk reader="oneHourDelayItemReader"
                       processor="chainedProcessorsForLessThanOneHourDelay"
                       writer="oneHourMultiResourceItemWriter"
                       commit-interval="${excel.sheet0.maxitemcount}">
                    <listeners merge="true">
                        <!-- To compute file name of the Excel file after filtering -->
                        <listener ref="resourceLocatorListener"/>
                        <!-- Put in a log file skipped items -->
                        <listener ref="logSkippedItemListener"/>
                    </listeners>
                </chunk>
            </tasklet>
            <listeners merge="true">
                <!-- Put in a log file skipped items -->
                <listener ref="logSkippedItemListener"/>
            </listeners>
        </step>
        <step id="deleteFile" parent="parentStep">
            <tasklet transaction-manager="batchTransactionManager" ref="deleteFileTasklet"/>
        </step>
        <validator ref="handleMoreThanOneHourDelaysJobParametersValidator"/>
    </job>


    <bean id="handleMoreThanOneHourDelaysJobParametersValidator" class="org.springframework.batch.core.job.DefaultJobParametersValidator">
        <property name="requiredKeys">
            <list>
                <value>excel.output.path</value>
                <value>excel.file.name</value>
                <value>excel.file.extension</value>
                <value>excel.template.path</value>
                <value>excel.archive.path</value>
                <value>more.than.one.hour.excel.path</value>
                <value>language</value>
                <value>mail.account.username</value>
                <value>mail.account.password</value>
                <value>mail.server.host</value>
                <value>mail.server.port</value>
                <value>mail.account.address</value>
            </list>
        </property>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         DECIDERS       ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="moreThanOneHourDelaysDecider"
          class="be.raildelays.batch.decider.MoreThanOneHourDelayDecider"
          scope="step">
        <property name="keyName" value="more.than.one.hour.excel.path"/>
        <property name="reader" ref="allExcelFilesItemReader"/>
        <property name="thresholdDelay" value="${excel.item.delay.max.threshold}" />
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         READERS        ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="oneHourDelayItemReader"
          class="org.springframework.batch.item.file.ExcelSheetItemReader"
          scope="step">
        <property name="name" value="oneHourDelayItemReader"/>
        <property name="rowsToSkip" value="${excel.sheet0.rowstoskip}"/>
        <property name="maxItemCount" value="${excel.sheet0.maxitemcount}"/>
        <property name="rowMapper">
            <bean class="be.raildelays.batch.reader.BatchExcelRowMapper">
                <property name="language" value="#{jobParameters['language']}"/>
            </bean>
        </property>
        <property name="resource"
                  value="file:#{jobParameters['excel.output.path']}/moreThanOneHourBackup/#{jobParameters['excel.file.name']}.#{jobParameters['excel.file.extension']}"/>
    </bean>

    <bean id="allExcelFilesItemReader"
          class="org.springframework.batch.item.file.MultiResourceItemReader"
          scope="step">
        <property name="delegate">
            <bean class="org.springframework.batch.item.file.ExcelSheetItemReader"
                  scope="step">
                <property name="name" value="allExcelFilesToSplitItemReader"/>
                <property name="rowsToSkip" value="${excel.sheet0.rowstoskip}"/>
                <property name="maxItemCount" value="${excel.sheet0.maxitemcount}"/>
                <property name="rowMapper">
                    <bean class="be.raildelays.batch.reader.BatchExcelRowMapper">
                        <property name="language" value="#{jobParameters['language']}"/>
                    </bean>
                </property>
            </bean>
        </property>
        <property name="resources"
                  value="file:#{jobParameters['excel.output.path']}/*.#{jobParameters['excel.file.extension']}"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================       PROCESSORS       ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="chainedProcessorsForMoreThanOneHourDelay"
          class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="filterLessThanOneHourDelaysProcessor"/>
                <ref bean="batchExcelRowToSimpleMailMessageProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="filterLessThanOneHourDelaysProcessor"
          class="be.raildelays.batch.processor.FilterWithThresholdDelayProcessor"
          scope="step">
        <property name="mode">
            <util:constant
                    static-field="be.raildelays.batch.processor.FilterWithThresholdDelayProcessor.Mode.FILTER_LESS_THAN"/>
        </property>
        <property name="threshold" value="${excel.item.delay.max.threshold}"/>
    </bean>

    <bean id="chainedProcessorsForLessThanOneHourDelay"
          class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="filterGreaterThanOneHourDelaysProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="filterGreaterThanOneHourDelaysProcessor"
          class="be.raildelays.batch.processor.FilterWithThresholdDelayProcessor"
          scope="step">
        <property name="mode">
            <util:constant
                    static-field="be.raildelays.batch.processor.FilterWithThresholdDelayProcessor.Mode.FILTER_GREATER_OR_EQUAL_TO"/>
        </property>
        <property name="threshold" value="${excel.item.delay.max.threshold}"/>
    </bean>

    <bean id="batchExcelRowToSimpleMailMessageProcessor"
          class="be.raildelays.batch.processor.BatchExcelRowToSimpleMailMessageProcessor"
          scope="step">
        <property name="from" value="#{jobParameters['mail.account.address']}"/>
        <property name="to" value="#{jobParameters['mail.account.address']}"/>
        <property name="subject" value="${email.more.than.one.hour.subject}"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         WRITERS        ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="oneHourMultiResourceItemWriter"
          class="org.springframework.batch.item.support.MultiResourceMaxItemCountItemWriter"
          scope="step">
        <property name="delegate" ref="oneHourSortedItemWriter"/>
        <property name="name" value="oneHourMultiResourceItemWriter"/>
        <property name="resourceLocator" ref="oneHourItemWriterResourceLocator"/>
    </bean>

    <bean id="oneHourSortedItemWriter"
          class="org.springframework.batch.item.support.SortedItemStreamWriter"
          scope="step">
        <property name="reader">
            <bean class="org.springframework.batch.item.file.ExcelSheetItemReader">
                <property name="name" value="excelSheetItemReader2"/>
                <property name="rowsToSkip" value="${excel.sheet0.rowstoskip}"/>
                <property name="maxItemCount" value="${excel.sheet0.maxitemcount}"/>
                <property name="rowMapper">
                    <bean class="be.raildelays.batch.reader.BatchExcelRowMapper">
                        <property name="language" value="#{jobParameters['language']}"/>
                    </bean>
                </property>
            </bean>
        </property>
        <property name="comparator">
            <bean class="be.raildelays.batch.bean.TimeBasedExcelRowComparator"/>
        </property>
        <property name="writer" ref="excelSheetWithOneHourDelayItemWriter"/>
    </bean>

    <bean id="excelSheetWithOneHourDelayItemWriter"
          class="org.springframework.batch.item.file.ExcelSheetItemWriter"
          scope="step">
        <property name="rowAggregator">
            <bean class="be.raildelays.batch.writer.BatchExcelRowAggregator"
                  scope="step">
                <property name="language" value="#{jobParameters['language']}"/>
            </bean>
        </property>
        <property name="name" value="excelSheetWithOneHourDelayItemWriter"/>
        <property name="shouldDeleteIfExists" value="true"/>
        <property name="useItemIndex" value="false"/>
        <property name="rowsToSkip" value="${excel.sheet0.rowstoskip}"/>
        <property name="maxItemCount" value="${excel.sheet0.maxitemcount}"/>
        <property name="template" value="file:#{jobParameters['excel.template.path']}"/>
    </bean>

    <bean id="emailWriter"
          class="org.springframework.batch.item.mail.SimpleMailMessageItemWriter"
          scope="step">
        <property name="mailSender">
            <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
                <property name="host" value="#{jobParameters['mail.server.host']}"/>
                <property name="port" value="#{jobParameters['mail.server.port']}"/>
                <property name="password" value="#{jobParameters['mail.account.password']}"/>
                <property name="username" value="#{jobParameters['mail.account.username']}"/>
            </bean>
        </property>
        <property name="mailErrorHandler">
            <bean class="org.springframework.batch.item.mail.DefaultMailErrorHandler"/>
        </property>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================        RESOURCES       ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="oneHourItemWriterResourceLocator"
          class="be.raildelays.batch.support.ToWriteExcelResourceLocator"
          scope="step">
        <property name="resource"
                  value="file:#{jobParameters['excel.output.path']}/#{jobParameters['excel.file.name']}.#{jobParameters['excel.file.extension']}"/>
        <property name="keyName" value="${excel.resource.key}"/>
        <property name="forceNewFile" value="true" />
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         TASKLET        ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="moveFileTasklet"
          class="be.raildelays.batch.tasklet.MoveFileTasklet"
          scope="step">
        <property name="source" value="file:#{jobParameters['more.than.one.hour.excel.path']}"/>
        <property name="destination" value="file:#{jobParameters['excel.output.path']}/moreThanOneHourBackup/#{jobParameters['excel.file.name']}.#{jobParameters['excel.file.extension']}"/>
    </bean>

    <bean id="deleteFileTasklet"
          class="be.raildelays.batch.tasklet.DeleteFileTasklet"
          scope="step">
        <property name="resources" value="file:#{jobParameters['excel.output.path']}/moreThanOneHourBackup/#{jobParameters['excel.file.name']}.#{jobParameters['excel.file.extension']}"/>
    </bean>


</beans>

