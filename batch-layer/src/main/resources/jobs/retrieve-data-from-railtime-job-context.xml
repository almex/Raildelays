<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Needed if w use a AutomaticJobRegistrar -->
	<context:annotation-config />

    <import resource="parent-job-context.xml"/>

	<batch:job id="retrieveDataFromRailtimeJob" parent="parentJob">
		<batch:step id="retrieveDataFromRailtime">
			<batch:tasklet transaction-manager="batchTransactionManager">
				<batch:chunk reader="compositeRailtimeItemReader"
					processor="chainedProcessorsForRailtime" writer="raildelaysServiceWriter"
					commit-interval="1" skip-limit="10" retry-limit="3">
                    <batch:retryable-exception-classes>
                        <batch:include class="java.io.IOException" />
                    </batch:retryable-exception-classes>
					<batch:skippable-exception-classes>
						<batch:include
							class="org.springframework.batch.item.validator.ValidationException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
				<batch:transaction-attributes
					isolation="DEFAULT" propagation="REQUIRED" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- Readers -->
	<bean id="compositeRailtimeItemReader" class="be.raildelays.batch.reader.CompositeRailtimeItemReader"
		scope="step">
		<property name="departureReader">
			<bean class="be.raildelays.batch.reader.RailtimeItemReader"
				scope="step">
				<property name="date" value="#{jobParameters['date']}" />
				<property name="trainId" value="#{jobParameters['trainId']}" />
				<property name="sens">
					<util:constant static-field="be.raildelays.domain.Sens.DEPARTURE" />
				</property>
			</bean>
		</property>
		<property name="arrivalReader">
			<bean class="be.raildelays.batch.reader.RailtimeItemReader"
				scope="step">
				<property name="date" value="#{jobParameters['date']}" />
				<property name="trainId" value="#{jobParameters['trainId']}" />
				<property name="sens">
					<util:constant static-field="be.raildelays.domain.Sens.ARRIVAL" />
				</property>
			</bean>
		</property>
	</bean>

	<!-- Processors -->
	<bean id="chainedProcessorsForRailtime"
		class="org.springframework.batch.item.support.CompositeItemProcessor">
		<property name="delegates">
			<list>
				<ref bean="routeLogMapperProcessor" />
                <ref bean="aggregateExpectedTimeProcessor" />
				<ref bean="validatorProcessor" />
			</list>
		</property>
	</bean>

	<bean id="routeLogMapperProcessor" class="be.raildelays.batch.processor.RouteLogMapperProcessor"
		scope="step">
		<property name="date" value="#{jobParameters[date]}" />
	</bean>

    <bean id="aggregateExpectedTimeProcessor" class="be.raildelays.batch.processor.AggregateExpectedTimeProcessor"
          scope="step">
    </bean>


	<bean id="validatorProcessor"
		class="org.springframework.batch.item.validator.ValidatingItemProcessor">
		<property name="validator">
			<bean class="org.springframework.batch.item.validator.SpringValidator">
				<property name="validator">
					<bean
						class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
				</property>
			</bean>
		</property>
	</bean>

	<!-- Writers -->
	<bean id="raildelaysServiceWriter" class="be.raildelays.batch.writer.RaildelaysServiceWriter"
		scope="step">
	</bean>

</beans>
