<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Needed if we use a AutomaticJobRegistrar -->
	<context:annotation-config />

	<batch:job id="synchronizeJob" restartable="true">
		<batch:step id="synchronizeStep">
			<batch:tasklet transaction-manager="batchTransactionManager">
				<batch:chunk reader="compositeInputReader" processor="compositeDataProcessor"
					writer="outputWriter" commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- <bean id="step" class="org.springframework.batch.core.step.tasklet.TaskletStep"> -->
	<!-- <property name="tasklet" ref="tasklet" /> -->
	<!-- </bean> -->

	<!-- <bean id="tasklet" class="org.springframework.batch.core.step.item.ChunkOrientedTasklet"> -->
	<!-- <property name="" ref="tasklet" /> -->
	<!-- </bean> -->

	<!-- Readers -->
	<bean id="compositeInputReader" class="org.springbatch.testcase.CompositeInputReader"
		scope="step">
		<property name="reader1">
			<bean class="org.springbatch.testcase.InputReader"  scope="step">
				<property name="dataTable">
					<array>
						<bean class="org.springbatch.testcase.DataFromSource1">
                            <constructor-arg value="A" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource1">
							<constructor-arg value="B" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource1">
							<constructor-arg value="C" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource1">
							<constructor-arg value="F" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource1">
							<constructor-arg value="G" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource1">
							<constructor-arg value="H" />
						</bean>
					</array>
				</property>
			</bean>
		</property>
		<property name="reader2">
			<bean class="org.springbatch.testcase.InputReader" scope="step">
				<property name="dataTable">
					<array>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="A" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="B" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="D" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="E" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="F" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="I" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="J" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="K" />
						</bean>
						<bean class="org.springbatch.testcase.DataFromSource2">
							<constructor-arg value="L" />
						</bean>
					</array>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="compositeDataProcessor" class="org.springbatch.testcase.CompositeDataProcessor"
		scope="step">
	</bean>

	<!-- Writers -->
	<bean id="outputWriter" class="org.springbatch.testcase.OutputWriter"
		scope="step">
	</bean>

</beans>
