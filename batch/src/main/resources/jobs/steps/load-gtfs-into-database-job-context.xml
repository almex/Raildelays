<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Needed if we use a AutomaticJobRegistrar -->
    <context:annotation-config/>
    <!-- To make the embedded step to use scope="step" -->
    <bean class="org.springframework.batch.core.scope.StepScope"/>

    <import resource="classpath:/jobs/parent-job-context.xml"/>


    <job id="loadGtfsIntoDatabaseJob" parent="parentJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="downloadFileStep" parent="parentStep" next="unzipFileStep">
            <tasklet transaction-manager="batchTransactionManager" ref="httpDownloadFileTasklet"/>
        </step>
        <step id="unzipFileStep" parent="parentStep" next="loadTrainStep">
            <tasklet transaction-manager="batchTransactionManager" ref="unzipFileTasklet"/>
        </step>
        <step id="loadTrainStep" parent="parentStep">
            <tasklet transaction-manager="batchTransactionManager">
                <chunk reader="csvTripsReader"
                       processor="chainedProcessorsTrain"
                       writer="databaseWriter"
                       commit-interval="10">
                </chunk>
                <transaction-attributes isolation="DEFAULT" propagation="REQUIRED"/>
            </tasklet>
        </step>
        <validator ref="loadGtfsIntoDatabaseValidator"/>
    </job>

    <bean id="loadGtfsIntoDatabaseValidator"
          class="org.springframework.batch.core.job.DefaultJobParametersValidator">
        <property name="requiredKeys">
            <list>
                <value>date</value>
                <value>language</value>
            </list>
        </property>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         DECIDERS       ===================================== -->
    <!-- ================================================================================================== -->


    <!-- ================================================================================================== -->
    <!-- =====================================         READERS        ===================================== -->
    <!-- ================================================================================================== -->

    <!--<bean id="csvRoutesReader"
          class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="resource" value="${gtfs.routes.uri}"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="route_id,agency_id,route_short_name,route_long_name,route_type"/>
                        <property name="strict" value="false"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="be.raildelays.batch.gtfs.RoutesFieldSetMapper"/>
                </property>
            </bean>
        </property>
        <property name="linesToSkip" value="1"/>
    </bean>-->

    <bean id="csvTripsReader"
          class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="resource" value="${gtfs.trips.uri}"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="route_id,service_id,trip_id"/>
                        <property name="strict" value="false"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="be.raildelays.batch.gtfs.TripsFieldSetMapper"/>
                </property>
            </bean>
        </property>
        <property name="linesToSkip" value="1"/>
    </bean>

    <bean id="csvStopTimesReader"
          class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="resource" value="${gtfs.stop.times.uri}"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="trip_id,arrival_time,departure_time,stop_id,stop_sequence,stop_headsign,pickup_type,drop_off_type,shape_dist_traveled,timepoint"/>
                        <property name="strict" value="false"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="be.raildelays.batch.gtfs.StopTimesFieldSetMapper"/>
                </property>
            </bean>
        </property>
        <property name="linesToSkip" value="1"/>
    </bean>

    <bean id="csvCalendarDatesReader"
          class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="resource" value="${gtfs.calendar.dates.uri}"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="service_id,date,exception_type"/>
                        <property name="strict" value="false"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="be.raildelays.batch.gtfs.CalendarDatesFieldSetMapper"/>
                </property>
            </bean>
        </property>
        <property name="linesToSkip" value="1"/>
    </bean>

    <bean id="csvStopsReader"
          class="org.springframework.batch.item.file.FlatFileItemReader"
          scope="step">
        <property name="resource" value="${gtfs.stops.uri}"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="stop_id,stop_name,stop_lat,stop_lon,platform_code,parent_station,location_type"/>
                        <property name="strict" value="false"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="be.raildelays.batch.gtfs.StopsFieldSetMapper"/>
                </property>
            </bean>
        </property>
        <property name="linesToSkip" value="1"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================       PROCESSORS       ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="chainedProcessorsTrain"
          class="org.springframework.batch.item.support.CompositeItemProcessor"
          scope="step"
          lazy-init="true">
        <property name="delegates">
            <list>
                <bean class="be.raildelays.batch.processor.NewLineStopProcessor">
                    <property name="calendarDatesReader" ref="csvCalendarDatesReader"/>
                    <property name="stopTimesReader" ref="csvStopTimesReader"/>
                    <property name="stopsReader" ref="csvStopsReader"/>
                    <property name="date" value="#{jobParameters['date']}"/>
                    <property name="lang" value="#{jobParameters['language']?.toUpperCase()}"/>
                    <property name="trainLineDao" ref="trainLineDao"/>
                    <property name="stationDao" ref="stationDao"/>
                </bean>
                <ref bean="validatorProcessor"/>
            </list>
        </property>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         WRITERS        ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="databaseWriter"
          class="org.springframework.batch.item.database.JpaItemWriter"
          scope="step">
        <property name="entityManagerFactory" ref="raildelaysEntityManagerFactory"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- =====================================         TASKLET        ===================================== -->
    <!-- ================================================================================================== -->

    <bean id="httpDownloadFileTasklet" class="org.springframework.batch.item.file.HttpDownloadFileTasklet">
        <property name="inputFile" value="${gtfs.download.uri}"/>
        <property name="destinationFolder" value="${gtfs.download.destination.folder.uri}"/>
    </bean>

    <bean id="unzipFileTasklet" class="org.springframework.batch.item.file.UnzipFileTasklet">
        <property name="inputFile" value="${gtfs.unzip.input.file.uri}"/>
        <property name="destinationFolder" value="${gtfs.unzip.destination.folder.uri}"/>
    </bean>

</beans>
