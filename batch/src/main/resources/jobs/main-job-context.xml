<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Needed if we use a AutomaticJobRegistrar -->
    <context:annotation-config/>

    <import resource="parent-job-context.xml"/>
    <import resource="steps/*-job-context.xml"/>

    <job id="mainJob" parent="parentJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="retrieveDataFromAfasStep" parent="parentStep" next="generateExcelFilesStep">
            <partition partitioner="partitioner">
                <handler task-executor="taskExecutor"/>
                <step parent="parentStep">
                    <job job-parameters-extractor="step1JobParameterExtractor" ref="retrieveDataFromAfasJob"/>
                    <listeners merge="true">
                        <!-- Register some ID's in the MDC -->
                        <listener ref="loggerContextStepListener"/>
                    </listeners>
                </step>
            </partition>
        </step>
        <step id="generateExcelFilesStep" parent="parentStep" next="decideIfWeHaveAMoreThanOneHourDelay">
            <job job-parameters-extractor="step2JobParameterExtractor" ref="generateExcelFilesJob"/>
        </step>
        <step id="decideIfWeHaveAMoreThanOneHourDelay" parent="parentStep" allow-start-if-complete="true">
            <tasklet transaction-manager="batchTransactionManager" ref="moreThanOneHourDelaysDecider">
                <listeners merge="true">
                    <!-- To promote more.than.one.hour.excel.path from stepExecutionContext to jobExecutionContext
                        then the step3JobParameterExtractor can handle it. -->
                    <listener ref="promoteFileLocationContextListener"/>
                </listeners>
            </tasklet>
            <fail on="FAILED"/>
            <next on="COMPLETED_WITH_60M_DELAY" to="handleMoreThanOneHourDelays"/>
            <next on="COMPLETED" to="decideIfWeHaveReachedMaxMonths"/>
        </step>
        <step id="handleMoreThanOneHourDelays" parent="parentStep">
            <job job-parameters-extractor="step3JobParameterExtractor" ref="handleMoreThanOneHourDelaysJob"/>
        </step>
        <step id="decideIfWeHaveReachedMaxMonths" parent="parentStep" allow-start-if-complete="true">
            <tasklet transaction-manager="batchTransactionManager" ref="maxMonthsDecider">
                <listeners merge="true">
                    <!-- To promote threshold.date from stepExecutionContext to jobExecutionContext
                        then the step4JobParameterExtractor can handle it. -->
                    <listener ref="promoteThresholdDateContextListener"/>
                </listeners>
            </tasklet>
            <fail on="FAILED"/>
            <next on="COMPLETED_WITH_MAX_MONTHS" to="handleMaxMonthsStep"/>
            <end on="COMPLETED"/>
        </step>
        <step id="handleMaxMonthsStep" parent="parentStep">
            <job job-parameters-extractor="step4JobParameterExtractor" ref="handleMaxMonthsJob"/>
        </step>
        <validator ref="jobParametersValidator"/>
        <listeners merge="true">
            <!-- Feed Logger MDC with some properties from JobContext -->
            <listener ref="loggerContextJobListener"/>
        </listeners>
    </job>

    <bean id="partitioner"
          class="be.raildelays.batch.reader.TrainIdPartitioner">
        <property name="trainListReader" ref="trainListReader"/>
    </bean>

    <bean id="taskExecutor"
          class="be.raildelays.concurrent.scheduling.MdcThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"/>
        <property name="maxPoolSize" value="4"/>
        <property name="allowCoreThreadTimeOut" value="true"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <bean id="promoteThresholdDateContextListener"
          class="org.springframework.batch.core.listener.ExecutionContextPromotionListener"
          scope="step">
        <property name="keys">
            <array>
                <value>threshold.date</value>
            </array>
        </property>
        <property name="statuses" value="COMPLETED_WITH_MAX_MONTHS"/>
    </bean>

    <bean id="promoteFileLocationContextListener"
          class="org.springframework.batch.core.listener.ExecutionContextPromotionListener"
          scope="step">
        <property name="keys">
            <array>
                <value>more.than.one.hour.excel.path</value>
            </array>
        </property>
        <property name="statuses" value="COMPLETED_WITH_60M_DELAY"/>
    </bean>

    <bean id="jobParametersValidator" class="org.springframework.batch.core.job.DefaultJobParametersValidator">
        <property name="requiredKeys">
            <list>
                <value>date</value>
                <value>station.departure</value>
                <value>station.arrival</value>
                <value>excel.template.path</value>
                <value>excel.file.name</value>
                <value>excel.file.extension</value>
                <value>excel.output.path</value>
                <value>excel.archive.path</value>
                <value>text.output.path</value>
                <value>language</value>
                <value>mail.account.username</value>
                <value>mail.account.password</value>
                <value>mail.server.host</value>
                <value>mail.server.port</value>
                <value>mail.account.address</value>
            </list>
        </property>
    </bean>


    <!-- ================================================================================================== -->
    <!-- =====================================        READERS         ===================================== -->
    <!-- ================================================================================================== -->
    <bean id="trainListReader"
          class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
            <bean
                    class="org.springframework.batch.item.file.mapping.PassThroughLineMapper">
            </bean>
        </property>
        <property name="encoding" value="ISO-8859-1"/>
        <property name="resource" value="${file.trainlist.uri}"/>
    </bean>

    <!-- ================================================================================================== -->
    <!-- ===================================== JOB_PAMETERS_EXTRACTOR ===================================== -->
    <!-- ================================================================================================== -->


    <bean id="step1JobParameterExtractor"
          parent="jobParameterExtractor">
        <!--<property name="keys">
            <list>
                <value>trainId</value>
                <value>language</value>
                <value>date</value>
            </list>
        </property>-->
    </bean>

    <bean id="step2JobParameterExtractor"
          parent="jobParameterExtractor">
        <!--<property name="keys">
            <list>
                <value>station.departure</value>
                <value>station.arrival</value>
                <value>excel.output.path</value>
                <value>excel.file.name</value>
                <value>excel.file.extension</value>
                <value>excel.template.path</value>
                <value>excel.archive.path</value>
                <value>text.output.path</value>
                <value>language</value>
                <value>date</value>
            </list>
        </property>-->
    </bean>

    <bean id="step3JobParameterExtractor"
          parent="jobParameterExtractor">
        <!--<property name="keys">
            <list>
                <value>excel.output.path</value>
                <value>excel.file.name</value>
                <value>excel.file.extension</value>
                <value>excel.template.path</value>
                <value>excel.archive.path</value>
                <value>more.than.one.hour.excel.path</value>
                <value>language</value>
                <value>mail.account.username</value>
                <value>mail.account.password</value>
                <value>mail.server.host</value>
                <value>mail.server.port</value>
                <value>mail.account.address</value>
            </list>
        </property>-->
    </bean>

    <bean id="step4JobParameterExtractor"
          parent="jobParameterExtractor">
        <!--<property name="keys">
            <list>
                <value>excel.output.path</value>
                <value>excel.file.name</value>
                <value>excel.file.extension</value>
                <value>excel.template.path</value>
                <value>excel.archive.path</value>
                <value>language</value>
                <value>mail.account.username</value>
                <value>mail.account.password</value>
                <value>mail.server.host</value>
                <value>mail.server.port</value>
                <value>mail.account.address</value>
                <value>threshold.date</value>
            </list>
        </property>-->
    </bean>

</beans>
