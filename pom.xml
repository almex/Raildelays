<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.almex</groupId>
    <artifactId>raildelays-parent</artifactId>
    <version>2.0.0-beta.2</version>
    <packaging>pom</packaging>

    <name>Raildelays</name>
    <url>https://github.com/almex/Raildelays</url>
    <inceptionYear>2012</inceptionYear>
    <description>
        Raildelays is mainly a Java application which accumulates train delays from the Belgian railway company called
        NMBS/SNCB.
    </description>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>Almex</id>
            <email>alexis underscore soumagne at hotmail dot com</email>
            <name>Alexis SOUMAGNE</name>
            <url>https://github.com/almex</url>
            <timezone>Europe/Berlin</timezone>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/almex/Raildelays.git</url>
        <connection>scm:git:https://github.com/almex/Raildelays.git</connection>
        <developerConnection>scm:git:git@github.com:almex/Raildelays.git</developerConnection>
        <tag>v2.0.0-beta.2</tag>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <issueManagement>
        <url>https://github.com/almex/Raildelays/issues</url>
        <system>GitHub</system>
    </issueManagement>

    <modules>
        <module>domain</module>
        <module>repository</module>
        <module>scraper</module>
        <module>service</module>
        <module>batch</module>
        <module>java-fx-ui</module>
        <module>server</module>
        <module>assembly</module>
    </modules>

    <prerequisites>
        <maven>${maven.version}</maven>
    </prerequisites>

    <properties>
        <jdk.version>1.8</jdk.version>
        <maven.version>3.2.0</maven.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

        <version.spring>4.3.1.RELEASE</version.spring>
        <version.spring.batch>3.0.7.RELEASE</version.spring.batch>
        <version.spring.data>Hopper-SR2</version.spring.data>
        <!--<version.spring.data.rest>2.3.2.RELEASE</version.spring.data.rest>-->
        <!--<version.spring.data.commons>1.11.0.RELEASE</version.spring.data.commons>-->
        <version.spring.hateoas>0.18.0.RELEASE</version.spring.hateoas>
        <version.spring.mock>2.0.8</version.spring.mock>
        <version.spring.boot>1.2.5.RELEASE</version.spring.boot>
        <version.spring.dbunit>1.4.0</version.spring.dbunit>
        <version.xbean.spring>3.16</version.xbean.spring>
        <version.hibernate.validator>5.2.1.Final</version.hibernate.validator>
        <version.hibernate>5.2.1.Final</version.hibernate>
        <version.eclipselink>2.5.1</version.eclipselink>
        <version.openjpa>2.2.2</version.openjpa>
        <version.querydsl>3.4.2</version.querydsl>
        <version.validation.api>1.1.0.Final</version.validation.api>
        <version.javax.el-api>2.2.4</version.javax.el-api>
        <version.hsqldb>2.3.4</version.hsqldb>
        <version.derby>10.10.1.1</version.derby>
        <version.servlet>3.1.0</version.servlet>
        <version.undertow>1.3.14.Final</version.undertow>
        <version.jersey>2.19</version.jersey>

        <version.quartz>2.2.2</version.quartz>
        <version.atomikos>3.9.2</version.atomikos>
        <version.log4j>2.6.1</version.log4j>
        <version.slf4j>1.7.12</version.slf4j>
        <version.log4jdbc>1.16</version.log4jdbc>
        <version.jboss-logging>3.3.0.Final</version.jboss-logging>
        <version.disruptor>3.3.2</version.disruptor>
        <version.groovy>2.3.9</version.groovy>
        <version.groovy.all>2.4.3</version.groovy.all>
        <version.groovy.eclipse.compiler>2.9.2-01</version.groovy.eclipse.compiler>
        <version.groovy.eclipse.batch>2.4.3-01</version.groovy.eclipse.batch>
        <version.tagsoup>1.2.1</version.tagsoup>
        <version.apache.poi>3.13</version.apache.poi>
        <version.commons.dbcp>1.4</version.commons.dbcp>
        <version.commons.cli>1.3.1</version.commons.cli>
        <version.commons.lang3>3.4</version.commons.lang3>
        <version.commons.collections4>4.0</version.commons.collections4>
        <version.jodatime>2.3</version.jodatime>
        <version.animal.snifer>1.14</version.animal.snifer>

        <version.pojo.unit>1.1.0</version.pojo.unit>
        <version.junit>4.12</version.junit>
        <version.hamcrest>2.0.0.0</version.hamcrest>
        <version.dbunit>2.4.9</version.dbunit>
        <version.easymock>3.4</version.easymock>
        <version.jacoco>0.7.5.201505241946</version.jacoco>
        <verion.testfx>4.0.4-alpha</verion.testfx>

        <!-- Surefire/Failsafe settings -->
        <forkCount>1</forkCount>
        <reuseForks>true</reuseForks>

        <!-- The destination file for the code coverage report has to be set
            to the same value in the parent pom and in each module pom. Then JaCoCo will
            add up information in the same report, so that, it will give the cross-module
            code coverage. -->
        <sonar.jacoco.itReportPath>${jacoco.it.destFile}</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${jacoco.test.destFile}</sonar.jacoco.reportPath>
        <sonar.surefire.reportsPath>${basedir}/target/surefire-reports</sonar.surefire.reportsPath>
        <sonar.junit.reportsPath>${sonar.surefire.reportsPath}</sonar.junit.reportsPath>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <!--sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis-->
        <sonar.language>java</sonar.language>
        <!-- groupId allow concurrent analyze -->
        <!--jacoco.test.destFile>${java.io.tmpdir}/${project.groupId}/jacoco-test.exec</jacoco.test.destFile -->
        <coveralls.report.path>${java.io.tmpdir}/JaCoCo${version.jacoco}/</coveralls.report.path>
        <jacoco.test.destFile>${coveralls.report.path}/jacoco-test.exec</jacoco.test.destFile>
        <jacoco.it.destFile>${coveralls.report.path}/jacoco-it.exec</jacoco.it.destFile>
        <it.source.path>src/it/java</it.source.path>
        <it.resources.path>src/it/resources</it.resources.path>

        <alpn-boot-string>-Xbootclasspath/p:${org.mortbay.jetty.alpn:alpn-boot:jar}</alpn-boot-string>
    </properties>


    <dependencyManagement>
        <dependencies>

            <!-- Internal dependencies -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-scraper</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-batch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>raildelays-assembly-descriptor</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>pojo-unit</artifactId>
                <version>${version.pojo.unit}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${version.log4j}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.bgee.log4jdbc-log4j2</groupId>
                <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
                <version>${version.log4jdbc}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${version.jboss-logging}</version>
            </dependency>
            <!-- To allow to use asynchronous logger with log4j2 (http://logging.apache.org/log4j/2.x/manual/async.html) -->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${version.disruptor}</version>
            </dependency>


            <!-- Testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-junit</artifactId>
                <version>${version.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${version.dbunit}</version>
            </dependency>
            <dependency>
                <groupId>com.excilys.ebi.spring-dbunit</groupId>
                <artifactId>spring-dbunit-test</artifactId>
                <version>${version.spring.dbunit}</version>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${version.easymock}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-mock</artifactId>
                <version>${version.spring.mock}}</version>
            </dependency>
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>testfx-core</artifactId>
                <version>${verion.testfx}</version>
            </dependency>
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>testfx-junit</artifactId>
                <version>${verion.testfx}</version>
            </dependency>

            <!-- Persistence -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${version.hibernate}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${version.hibernate}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>1.0.0.Final</version>
            </dependency>
            <dependency>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa-all</artifactId>
                <version>${version.openjpa}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>eclipselink</artifactId>
                <version>${version.eclipselink}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>javax.persistence</artifactId>
                <version>2.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${version.hsqldb}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>${version.derby}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derbytools</artifactId>
                <version>${version.derby}</version>
            </dependency>

            <!-- Apache Commons -->
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${version.commons.dbcp}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${version.commons.cli}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.commons.lang3}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${version.commons.collections4}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.4</version>
            </dependency>

            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-jdbc</artifactId>
                <version>${version.atomikos}</version>
            </dependency>
            <dependency>
                <groupId>com.atomikos</groupId>
                <artifactId>transactions-hibernate3</artifactId>
                <version>${version.atomikos}</version>
            </dependency>
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${version.querydsl}</version>
            </dependency>
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${version.querydsl}</version>
            </dependency>


            <!-- Spring Data -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-releasetrain</artifactId>
                <version>${version.spring.data}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.5.4</version>
            </dependency>

            <!-- Groovy -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-eclipse-compiler</artifactId>
                <version>${version.groovy.eclipse.compiler}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${version.groovy.all}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-eclipse-batch</artifactId>
                <version>${version.groovy.eclipse.batch}</version>
            </dependency>
            <dependency>
                <groupId>org.ccil.cowan.tagsoup</groupId>
                <artifactId>tagsoup</artifactId>
                <version>${version.tagsoup}</version>
            </dependency>

            <!-- AOP -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>1.6.11</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.6.11</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>2.2.2</version>
            </dependency>

            <!-- Utilities -->
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer</artifactId>
                <version>5.3.2</version>
            </dependency>

            <!-- Validation -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${version.hibernate.validator}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator-cdi</artifactId>
                <version>${version.hibernate.validator}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${version.validation.api}</version>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>${version.javax.el-api}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>javax.el</artifactId>
                <version>${version.javax.el-api}</version>
            </dependency>


            <!-- Spring Framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.xbean</groupId>
                <artifactId>xbean-spring</artifactId>
                <version>${version.xbean.spring}</version>
            </dependency>

            <!-- Spring Boot -->

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${version.spring.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${version.spring.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${version.spring.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${version.spring.boot}</version>
            </dependency>

            <!-- Batch -->
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-core</artifactId>
                <version>${version.spring.batch}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-infrastructure</artifactId>
                <version>${version.spring.batch}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-test</artifactId>
                <version>${version.spring.batch}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-core-tests</artifactId>
                <version>${version.spring.batch}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-infrastructure-tests</artifactId>
                <version>${version.spring.batch}</version>
            </dependency>

            <!-- Web -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${version.servlet}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${version.spring}</version>
            </dependency>

            <!-- Servlet Container related -->
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-core</artifactId>
                <version>${version.undertow}</version>
            </dependency>
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-servlet</artifactId>
                <version>${version.undertow}</version>
            </dependency>
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-websockets-jsr</artifactId>
                <version>${version.undertow}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet-core</artifactId>
                <version>${version.jersey}</version>
            </dependency>

            <!-- Scheduling -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${version.quartz}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>${version.quartz}</version>
            </dependency>

            <!-- e-mail -->
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>1.5.2</version>
            </dependency>

            <!-- Java Excel sheet API -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${version.apache.poi}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${version.apache.poi}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${version.jodatime}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- All modules do logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>
        <!-- To redirect Hibernate logging to Log4j 2 -->
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>


        <!-- All module do testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- Removed to avoid issue with *.xlsx files in batch-layer -->
                <!--<filtering>true</filtering> -->
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerVersion>${jdk.version}</compilerVersion>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${jdk.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <!--Command line option -npu is deprecated and will be removed in future Maven versions-->
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release,it</releaseProfiles>
                    <goals>deploy</goals>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Otherwise the file based database is created in ${basedir} -->
                    <workingDirectory>${project.build.directory}</workingDirectory>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!-- Otherwise the file based database is created in ${basedir} -->
                    <workingDirectory>${project.build.directory}</workingDirectory>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <!-- We are stuck to version 3.1 until this is solved https://issues.apache.org/jira/browse/MCOMPILER-236 -->
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.9</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>
                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>hibernate3-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
                <plugin>
                    <groupId>org.easytesting</groupId>
                    <artifactId>javafxc-maven-plugin</artifactId>
                    <version>1.0b2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-eclipse-compiler</artifactId>
                    <version>${version.groovy.eclipse.compiler}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${version.spring.boot}</version>
                </plugin>

                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>1.0.9</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-maven-plugin</artifactId>
                    <version>1.14</version>
                </plugin>

                <!-- Maven Central Repository Requirements -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.5</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>groovy</id>

            <activation>
                <file>
                    <exists>src/main/groovy</exists>
                </file>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <version>${version.groovy.all}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerId>groovy-eclipse-compiler</compilerId>
                            <compilerArgument>nowarn</compilerArgument>
                            <verbose>false</verbose>
                            <source>${jdk.version}</source>
                            <target>${jdk.version}</target>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <testSource>${jdk.version}</testSource>
                            <testTarget>${jdk.version}</testTarget>
                            <verbose>true</verbose>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-eclipse-compiler</artifactId>
                                <version>${version.groovy.eclipse.compiler}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-eclipse-batch</artifactId>
                                <version>${version.groovy.eclipse.batch}</version>
                            </dependency>

                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-compiler</artifactId>
                        <extensions>true</extensions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-groovy-it-source</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/it/groovy</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Integration tests profile : execution -->
        <profile>
            <id>it</id>

            <build>
                <plugins>

                    <!-- Failsafe plugin: configured to run integration tests -->
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <sources>
                                <source>${it.source.path}</source>
                            </sources>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <argLine>
                                        -Xmx512m -Xms256m -XX:MaxMetaspaceSize=256m -XX:MetaspaceSize=128m
                                    </argLine>
                                </configuration>
                            </execution>
                            <execution>
                                <id>integration-tests-verify</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>

        </profile>

        <profile>

            <id>it-directories</id>

            <activation>
                <property>
                    <name>!maven.test.skip</name>
                </property>
            </activation>

            <dependencies>

                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-test</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                    <scope>test</scope>
                </dependency>

            </dependencies>

            <build>
                <plugins>

                    <!-- Build Helper plugin: configured to add source and resources path for integration tests -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-it-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${it.source.path}</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-it-resource</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>add-test-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>${it.resources.path}</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <!-- Compute code coverage before Sonar execution (This profile must be activated in Bamboo for the Sonar plan) -->
        <profile>
            <id>code-coverage</id>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>false</skipTests>
                            <!-- If you want code coverage you must run tests -->
                            <reportFormat>xml</reportFormat>
                            <!-- required format for Sonar -->
                            <testFailureIgnore>true</testFailureIgnore>
                            <!-- We want to count the number of failed tests -->
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip>
                                    <forkCount>1</forkCount>
                                    <!-- fork mode must be enable with JaCoCo (1 thread per CPU Core) -->
                                    <reuseForks>true</reuseForks>
                                    <!-- coverage.test.argLine is the link with JaCoCo plug-in -->
                                    <argLine>
                                        ${coverage.test.argLine} -Xmx256m -Xms128m -XX:MaxMetaspaceSize=128m
                                        -XX:MetaspaceSize=64m
                                    </argLine>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <sources>
                                <source>${it.source.path}</source>
                            </sources>
                            <skipTests>false</skipTests>
                            <!-- If you want code coverage you must run tests -->
                            <reportFormat>xml</reportFormat>
                            <!-- required format for Sonar -->
                            <testFailureIgnore>true</testFailureIgnore>
                            <!-- We want to count the number of failed tests -->
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip>
                                    <forkCount>1</forkCount>
                                    <!-- fork mode must be enable with JaCoCo (1 thread per CPU Core) -->
                                    <reuseForks>true</reuseForks>
                                    <!-- coverage.it.argLine is the link with JaCoCo plug-in -->
                                    <argLine>
                                        ${coverage.it.argLine} -Xmx512m -Xms256m -XX:MaxMetaspaceSize=256m
                                        -XX:MetaspaceSize=128m
                                    </argLine>
                                </configuration>
                            </execution>
                            <execution>
                                <id>integration-tests-verify</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- To compute Code Coverage for integration tests seperataly from unit tests -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-surefire-argLine</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>coverage.test.argLine</propertyName>
                                    <destFile>${jacoco.test.destFile}</destFile>
                                    <append>true</append>
                                </configuration>
                            </execution>
                            <execution>
                                <id>prepare-failsafe-argLine</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>coverage.it.argLine</propertyName>
                                    <destFile>${jacoco.it.destFile}</destFile>
                                    <append>true</append>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>coveralls</id>

            <build>
                <plugins>
                    <!-- To compute Code Coverage for integration tests and unit tests -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes>
                                <!-- Exclude generated sources like JPA model gen -->
                                <exclude>**/*_*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <!-- We want unit-tests and integration-tests in the report -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <!-- fork mode must be enable with JaCoCo (1 thread per CPU Core) -->
                            <forkCount>1</forkCount>
                            <!-- Must be set to false to solve issue with JUnit ClassRule -->
                            <reuseForks>false</reuseForks>
                            <!-- If you want code coverage you must run tests -->
                            <skipTests>false</skipTests>
                            <!-- We want to count the number of failed tests -->
                            <testFailureIgnore>true</testFailureIgnore>
                            <includes>
                                <include>**/*Test.java</include>
                                <include>**/*IT.java</include>
                            </includes>
                            <!-- To solve NoClassDefFoundError javafx.fxml.Initializable -->
                            <additionalClasspathElements>
                                <additionalClasspathElement>${java.home}/lib/ext/jfxrt.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                        </configuration>
                    </plugin>
                    <!-- To publish code-coverage on Coveralls via Travis-ci -->
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <configuration>
                            <repoToken>${repoToken}</repoToken>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <!-- Instrument code coverage per tests during Sonar execution (This profile must be activated in Bamboo for the Sonar plan) -->
        <profile>
            <id>coverage-per-test</id>

            <!-- Add a link to Sonar dashboard between unit test and source code  -->
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>3.2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>false</skipTests>
                            <!-- If you want code coverage you must run tests -->
                            <reportFormat>xml</reportFormat>
                            <!-- required format for Sonar -->
                            <testFailureIgnore>true</testFailureIgnore>
                            <!-- We want to count the number of failed tests -->
                            <!-- Add a link to Sonar dashboard between unit test and source code  -->
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.sonar.java.jacoco.JUnitListener</value>
                                </property>
                            </properties>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Release profile dedicated to release on Maven Central Repository -->
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Not available yet for JDK 8 -->
                    <!--plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>animal-sniffer-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-java-api</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <signature>
                                        <groupId>org.codehaus.mojo.signature</groupId>
                                        <artifactId>java18</artifactId>
                                        <version>1.0</version>
                                    </signature>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin-->
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
